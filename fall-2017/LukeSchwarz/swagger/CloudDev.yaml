swagger: '2.0'
info:
  description: ''
  version: 1.0.0
  title: CloudClass Development Hands on
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: luke@example.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: ..
basePath: /
schemes:
  - http
paths:
  /user:
    get:
      tags:
        - User
      summary: get list of users
      description: get list of users
      operationId: ArrayOfUsers
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '405':
          description: Invalid input
    post:
      tags:
        - User
      summary: Create user
      description: Create user
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  '/user/{Userid}':
    get:
      tags:
        - User
      summary: Get user by user id
      description: ''
      operationId: getUserByID
      produces:
        - application/xml
        - application/json
      parameters:
        - name: Userid
          in: path
          description: 'The id that needs to be fetched. Use 1 for testing. '
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid id supplied
        '404':
          description: User not found
    put:
      tags:
        - User
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: Userid
          in: path
          description: user that needs to be updated
          required: true
          type: integer
      responses:
        '200':
          description: success.
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - User
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: Userid
          in: path
          description: The user that needs to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: success
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  '/user/{id}/Task':
    get:
      tags:
        - User
      summary: get list of tasks
      description: get list of tasks by user
      operationId: Array of tasks by user
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be fetched. Use 1 for testing. '
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Task'
        '405':
          description: Invalid input
    post:
      tags:
        - User
      summary: create task
      description: create task
      operationId: Create Task
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be fetched. Use 1 for testing. '
          required: true
          type: integer
        - in: body
          name: body
          description: Created Task object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '405':
          description: Invalid input
  '/users/{userID}/tasks/{taskID}':
    get:
      tags:
        - User
        - Task
      summary: get task
      description: get task by user by id
      operationId: Task by ID
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userID
          in: path
          description: 'The id that needs to be fetched. Use 1 for testing. '
          required: true
          type: integer
        - name: taskID
          in: path
          description: 'The id that needs to be fetched. Use 1 for testing. '
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '404':
          description: task not found
        '405':
          description: Invalid input
    put:
      tags:
        - User
        - Task
      summary: update task
      description: update task by user by taskid
      operationId: Update Task by ID
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userID
          in: path
          description: 'The id that needs to be fetched. Use 1 for testing. '
          required: true
          type: integer
        - name: taskID
          in: path
          description: 'The id that needs to be fetched. Use 1 for testing. '
          required: true
          type: integer
        - in: body
          name: body
          description: Created Task object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '404':
          description: task not found
        '405':
          description: Invalid input
    delete:
      tags:
        - User
        - Task
      summary: Delete task
      description: Delete task by user by taskid
      operationId: Delete Task by ID
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userID
          in: path
          description: 'The id that needs to be fetched. Use 1 for testing. '
          required: true
          type: integer
        - name: taskID
          in: path
          description: 'The id that needs to be fetched. Use 1 for testing. '
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
        '404':
          description: task not found
        '405':
          description: Invalid input
definitions:
  Task:
    type: object
    properties:
      TaskID:
        type: integer
        format: int64
      Title:
        type: string
      CreationDate:
        type: string
        format: date-time
      DueDate:
        type: string
        format: date-time
      CompletionDate:
        type: string
        format: date-time
      Status:
        type: string
        description: Task Status
        enum:
          - New
          - In Progress
          - Blocked
          - Completed
      Owner:
        $ref: '#/definitions/User'
    xml:
      name: Category
  User:
    type: object
    properties:
      Userid:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      Tasks:
        type: array
        xml:
          name: Task
          wrapped: true
        items:
          $ref: '#/definitions/Task'
    xml:
      name: User
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
